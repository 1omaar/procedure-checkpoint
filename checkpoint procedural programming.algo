PROCEDURE DOT_Product(VAR v1,v2: ARRAY_OF FLOAT[2],cos(v1,v2):FLOAT)
VAR
    i:INTEGER;
    ps,V1,V2:FLOAT;
    
BEGIN
    i:=0;
    FOR i FROM 0 TO 1 STEP i++  DO
        read(v1[i]);
    END_FOR
    i:=0;
    FOR i FROM 0 TO 1 STEP i++  DO
       read(v2[i]);
    END_FOR
 FOR i FROM 0 TO 1 STEP i++  DO
        WHILE (i<2 AND v1[i]<>0 AND v1[i+1]<>0) DO
           V1:=V1+v1[i]*v1[i];
        END_WHILE
    END_FOR
    V1:=V1**0.5
    FOR i FROM 0 TO 1 STEP i++  DO
        WHILE (i<2 AND v2[i]<>0 AND v2[i+1]<>0) DO
           V2:=V2+v2[i]*v2[i];
        END_WHILE
    END_FOR
    V2:=V2**0.5;
IF (V1<0 OR V2<0 OR cos(v1,v2)<0) THEN
    ps:=V1*V2*cos(v1,v2)*-1;
ELSE
    ps:=ps:=V1*V2*cos(v1,v2);
END_IF
    write(ps);
END
ALGORITHM orthogonality
VAR
    v1,v2 : ARRAY_OF FLOAT[2];
    cos(v1,v2):FLOAT;
BEGIN
    IF (DOT_Product(VAR v1,v2: ARRAY_OF FLOAT[2],cos(v1,v2):FLOAT)=0) THEN
        write("les deux vecteurs sont orthogonaux");
    ELSE
        write("les deux vecteurs ne sont pas orthogonaux");
    END_IF
END